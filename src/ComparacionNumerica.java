
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Dilan Lara
 */
public class ComparacionNumerica extends javax.swing.JFrame {

    /**
     * Creates new form ComparacionNumerica
     */
    public ComparacionNumerica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Comp = new javax.swing.JButton();
        Num = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Calculadora");

        jLabel2.setText("Ingrese un numero :");

        Comp.setText("Comprobar");
        Comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompActionPerformed(evt);
            }
        });

        Num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(Num, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Comp, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(Comp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//verifica si un número es primo al iterar 
//sobre los números desde 2 hasta la raíz cuadrada del número dado y verifica 
//si es divisible por alguno de ellos. 
//Si encuentra un divisor, devuelve false; de lo contrario, devuelve true
    private boolean esPrimo(int numero) {
    if (numero <= 1) {
        return false;
    }
    for (int i = 2; i <= Math.sqrt(numero); i++) {
        if (numero % i == 0) {
            return false;
        }
    }
    return true;
}
    
    private void CompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompActionPerformed
int num = Integer.parseInt(Num.getText());
int sumDivisor = 0;
int sumaPrimosMenores = 0;
boolean esPerfecto = false;
boolean esPrimo = true;
//La función de StringBuilder es acumular cadenas de texto o caracteres eficientemente, 
//lo que permite realizar operaciones de concatenación y manipulación de cadenas de manera 
//más eficiente que utilizando operaciones directas con cadenas (String).
StringBuilder listaNumeros = new StringBuilder();

// Calcular  para verificar si el número es perfecto
for (int i = 1; i <= num / 2; i++) {
    if (num % i == 0) {
        sumDivisor += i;
    }
}
// Verificar si el número es perfecto 
if (sumDivisor == num) {
    esPerfecto = true;
}

// Verificar si el número es primo
if (num <= 1) {
    esPrimo = false;
} else {
   //Metodo Para Sacar la raiz cuadrada
  // toma un número como argumento y devuelve su raíz cuadrada como un valor de tipo double.
   for (int i = 2; i <= Math.sqrt(num); i++) {   
        if (num % i == 0) {
            esPrimo = false;
            break;
        }
    }
}

// Construir la cadena de texto basado en los resultados obtenidos
if (esPerfecto) {
    listaNumeros.append("ES NUMERO PERFECTO");
} else {
    listaNumeros.append("NO ES NUMERO PERFECTO");
}

if (esPrimo) {
    listaNumeros.append("\nES NUMERO PRIMO");
} else {
    listaNumeros.append("\nNO ES NUMERO PRIMO");
}

// Calcular la suma de números primos menores que el número ingresado
 if (esPrimo) {
    for (int i = 2; i < num; i++) {
        boolean esPrimoMenor = true;
        for (int j = 2; j <= Math.sqrt(i); j++) {
            if (i % j == 0) {
                esPrimoMenor = false;
                break;
            }
        }
         if (esPrimoMenor) {
            sumaPrimosMenores += i;
        }
    }
     // Construir la lista de números primos menores que el número ingresado
    listaNumeros.append("\nNÚMEROS PRIMOS MENORES QUE ").append(num).append("\n");
     for (int i = num - 1; i >= 2; i--) {
        if (esPrimo(i)) {
            listaNumeros.append(i).append(", ");
        }
   
    }
    // Construir el mensaje con los resultados y la suma de primos menores
    listaNumeros.append("\nLA SUMA TOTAL ES ").append(sumaPrimosMenores);
    double raizSumaPrimos = Math.sqrt(sumaPrimosMenores);
    listaNumeros.append("\nRaíz cuadrada de la suma: ").append(raizSumaPrimos);
}
JOptionPane.showMessageDialog(rootPane, listaNumeros.toString());

    }//GEN-LAST:event_CompActionPerformed
    
    
    private void NumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComparacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComparacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComparacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComparacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComparacionNumerica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comp;
    private javax.swing.JTextField Num;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}
